<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learn.chapter4.dao.RoleDao">

    <resultMap id="roleMap" type="role">
        <id property="id" column="id" />
        <result property="roleName" column="role_name" />
        <result property="note" column="note" />
    </resultMap>

    <sql id="rolCols">
        ${alias}.id, ${alias}.role_name, ${alias}.note
    </sql>

    <select id="getRole" parameterType="long" resultMap="roleMap">
        select
            <include refid="rolCols">
                <property name="alias" value="r"/>
            </include> from t_role r where id = #{id}
    </select>

    <select id="getRoleByList" resultType="role">
        select * from t_role
        where id in
        <foreach item="roleNo" index="index" collection="roleIdList"
                 open="(" separator="," close=")">
            #{roleNo}
        </foreach>
    </select>

<!--    <select id="getRole" parameterType="long" resultMap="roleMap">-->
<!--        select id, role_name, note from t_role where id = #{id}-->
<!--    </select>-->

    <insert id="insertRole" parameterType="role" useGeneratedKeys="true" keyProperty="id">
        insert into t_role(role_name, note) values(#{roleName}, #{note})
    </insert>

    <delete id="deleteRole" parameterType="long">
        delete from t_role where id = #{id}
    </delete>

    <update id="updateRole" parameterType="role">
        update t_role
        <set>
            <if test="roleName != null and roleName != ''">
                role_name = #{roleName},
            </if>
            <if test="note != null and note != ''">
                note = #{note},
            </if>
        </set>
        where id = #{id}
    </update>

    <select id="findRoles" parameterType="string" resultType="role">
        select id, role_name as roleName, note from t_role where 1=1
        <if test="roleName != null and roleName != ''">
            and role_name like concat('%', #{roleName}, '%')
        </if>
    </select>

<!--    <select id="findRoles" parameterType="string" resultType="role">-->
<!--        select id, role_name as roleName, note from t_role-->
<!--        <where>-->
<!--            <if test="roleName != null and roleName != ''">-->
<!--                and role_name like concat('%', #{roleName}, '%')-->
<!--            </if>-->
<!--        </where>-->
<!--    </select>-->


<!--    <select id="findRoles" parameterType="string" resultType="role">-->
<!--        select id, role_name as roleName, note from t_role-->
<!--        <trim prefix="where" prefixOverrides="and">-->
<!--            <if test="roleName != null and roleName != ''">-->
<!--                and role_name like concat('%', #{roleName}, '%')-->
<!--            </if>-->
<!--        </trim>-->
<!--    </select>-->

    <select id="findRoles2" resultType="role">
        select id, role_name, note
        from t_role where 1=1
        <choose>
            <when test="roleName != null and roleName != ''">
                and role_name like concat('%', #{roleName}, '%')
            </when>
            <when test="note != null and note != ''">
                and note like concat('%', #{note}, '%')
            </when>
            <otherwise>
                AND note is not null
            </otherwise>
        </choose>
    </select>

    <select id="findRolesBind" resultType="role">
        <bind name="pattern_roleName"  value="'%' + roleName + '%'"/>
        <bind name="pattern_note"  value="'%' + note + '%'"/>
        select * from t_role
        where role_name like #{pattern_roleName}
        and note like #{pattern_note}
    </select>

    <select id="countByNote" parameterType="string" resultType="int">
        select count(*) total from t_role
                              where note like concat(#{note}, '%')
    </select>

    <select id="findRolesByMap" parameterType="map" resultType="role">
        select id, role_name as roleName, note from t_role
        where role_name like concat('%', #{roleName}, '%')
        and note like concat('%', #{note}, '%')
    </select>

    <select id="findRolesByAnnotation" resultType="role">
        select id, role_name as roleName, note from t_role
        where role_name like concat('%', #{roleName}, '%')
        and note like concat('%', #{note}, '%')
    </select>

    <select id="findRolesByBean" resultType="role" parameterType="com.learn.chapter4.pojo.RoleParams">
        select id, role_name as roleName, note from t_role
        where role_name like concat('%', #{roleName}, '%')
          and note like concat('%', #{note}, '%')
    </select>

    <select id="findByMix" resultType="role">
        select id, role_name as roleName, note from t_role
        where role_name like concat('%', #{params.roleName}, '%')
        and note like concat('%', #{params.note}, '%')
        limit #{page.start}, #{page.limit}
    </select>

    <select id="findByRowBounds" resultType="role">
        select id, role_name as roleName, note from t_role
        where role_name like concat('%', #{roleName}, '%')
          and note like concat('%', #{note}, '%')
    </select>

</mapper>